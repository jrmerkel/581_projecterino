#*****************************************************************************************
# Vivado (TM) v2019.2 (64-bit)
#
# create_post_synthesis_project.tcl: Tcl script for re-creating project 'rsd_post_synthesis'
#
# Generated by Vivado on Mon Jan 20 22:37:54 JST 2020
# IP Build 2700528 on Thu Nov  7 00:09:20 MST 2019
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (create_post_synthesis_project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/matsuo/workspace/rsd/Processor/Src/BasicTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/MemoryMapTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Decoder/OpFormat.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Decoder/MicroOp.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Cache/CacheSystemTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/LoadStoreUnit/LoadStoreUnitTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RenameLogic/RenameLogicTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RegisterFile/BypassTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/FetchUnit/FetchUnitTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/SchedulerTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/PipelineTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Debug/DebugTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/BasicMacros.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RenameLogic/ActiveList.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RenameLogic/ActiveListIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/MemoryTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/IO/IO_UnitTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/FetchUnit/BTB.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/FetchUnit/BranchPredictor.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RegisterFile/BypassController.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RegisterFile/BypassNetwork.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RegisterFile/BypassNetworkIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Privileged/CSR_UnitTypes.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Privileged/CSR_Unit.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Privileged/CSR_UnitIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Cache/CacheSystemIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/CommitStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/CommitStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerExecutionStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerExecutionStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerIssueStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerIssueStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterReadStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterReadStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterWriteStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Controller.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/ControllerIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Core.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Cache/DCache.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Cache/DCacheIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Debug/Debug.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Debug/DebugIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/DecodeStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/DecodeStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Decoder/DecodedBranchResolver.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Decoder/Decoder.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/DestinationRAM.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/DispatchStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Primitives/Divider.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/ExecUnit/DividerUnit.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/FetchStage/FetchStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/FetchStage/FetchStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Primitives/FlipFlop.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Primitives/FreeList.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/FetchUnit/Gshare.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Debug/HardwareCounter.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Debug/HardwareCounterIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Cache/ICache.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/IO/IO_Unit.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/IO/IO_UnitIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/ExecUnit/IntALU.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/IntegerBackEnd/IntegerExecutionStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/IntegerBackEnd/IntegerExecutionStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/IntegerBackEnd/IntegerIssueStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/IntegerBackEnd/IntegerIssueStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/IntegerBackEnd/IntegerRegisterReadStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/IntegerBackEnd/IntegerRegisterReadStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/IntegerBackEnd/IntegerRegisterWriteStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Privileged/InterruptController.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/IssueQueue.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/LoadStoreUnit/LoadQueue.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/LoadStoreUnit/LoadStoreUnit.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/LoadStoreUnit/LoadStoreUnitIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Main_Zynq.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/Memory.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Cache/MemoryAccessController.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/MemoryBackEnd/MemoryAccessStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/MemoryBackEnd/MemoryAccessStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/MemoryDependencyPredictor.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/MemoryBackEnd/MemoryExecutionStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/MemoryBackEnd/MemoryExecutionStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/MemoryBackEnd/MemoryIssueStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/MemoryBackEnd/MemoryIssueStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/MemoryBackEnd/MemoryRegisterReadStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/MemoryBackEnd/MemoryRegisterReadStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/MemoryBackEnd/MemoryRegisterWriteStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/MemoryRequestQueue.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/MemoryBackEnd/MemoryTagAccessStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/MemoryBackEnd/MemoryTagAccessStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/MulDivUnit/MulDivUnit.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/MulDivUnit/MulDivUnitIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Primitives/Multiplier.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/ExecUnit/MultiplierUnit.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/FetchStage/NextPCStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/FetchStage/NextPCStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/FetchStage/PC.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Primitives/Picker.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/PreDecodeStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/PreDecodeStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/ProducerMatrix.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Primitives/Queue.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Primitives/RAM_Vivado.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RenameLogic/RMT.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/ReadyBitTable.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Recovery/RecoveryManager.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Recovery/RecoveryManagerIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RegisterFile/RegisterFile.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RegisterFile/RegisterFileIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RenameLogic/RenameLogic.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RenameLogic/RenameLogicCommitter.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RenameLogic/RenameLogicIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/RenameStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/RenameStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/ReplayQueue.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/ResetController.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RenameLogic/RetirementRMT.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/ScheduleStage.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/ScheduleStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/Scheduler.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/SchedulerIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/SelectLogic.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/ExecUnit/Shifter.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/LoadStoreUnit/StoreCommitter.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/LoadStoreUnit/StoreQueue.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/WakeupLogic.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/WakeupPipelineRegister.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/WakeupSelectIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Main_Zynq_Wrapper.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/SynthesisMacros.svh"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/Axi4LiteControlRegister.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/Axi4LiteControlRegisterIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/ControlQueue.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/Axi4MemoryIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/MemoryReadReqQueue.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/MemoryWriteDataQueue.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/Axi4Memory.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/Axi4LiteControlMemoryIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Memory/Axi4LiteMemory.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/FetchUnit/Bimodal.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/ExecUnit/BitCounter.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Cache/CachePrimitives.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Primitives/LRU_Counter.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/ExecUnit/PipelinedRefDivider.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Scheduler/SourceCAM.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/RegisterFile/VectorBypassNetwork.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/ExecUnit/VectorUnit.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/MemoryBackEnd/MemoryRegisterWriteStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/DispatchStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Pipeline/IntegerBackEnd/IntegerRegisterWriteStageIF.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Verification/Dumper.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/Verification/TestBenchClockGenerator.sv"
#    "/home/matsuo/workspace/rsd/Processor/Project/Vivado/TargetBoards/Zedboard/code.hex"
#    "/home/matsuo/workspace/rsd/Processor/Src/Verification/TestMain.sv"
#    "/home/matsuo/workspace/rsd/Processor/Src/BasicMacros.sv"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "$env(RSD_ROOT)/Processor/Project/Vivado/TargetBoards/Zedboard"

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "rsd_post_synthesis"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "create_post_synthesis_project.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/rsd_post_synthesis"]"

# Create project
create_project ${_xil_proj_name_} $origin_dir/${_xil_proj_name_} -part xc7z020clg484-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "em.avnet.com:zed:part0:1.4" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "zed" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "28" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../../../../Src/BasicTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Memory/MemoryMapTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Cache/CacheSystemTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Memory/MemoryTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Decoder/OpFormat.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Decoder/MicroOp.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RegisterFile/BypassTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/FetchUnit/FetchUnitTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/LoadStoreUnit/LoadStoreUnitTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RenameLogic/RenameLogicTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/SchedulerTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/PipelineTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/IO/IO_UnitTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Privileged/CSR_UnitTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Debug/DebugTypes.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Verification/TestBenchClockGenerator.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Verification/Dumper.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Verification/TestMain.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Main_Zynq_Wrapper.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Main_Zynq.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Core.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/FetchStage/NextPCStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/FetchStage/NextPCStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/FetchStage/FetchStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/FetchStage/FetchStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/FetchStage/PC.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/PreDecodeStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/PreDecodeStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/DecodeStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/DecodeStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/RenameStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/RenameStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/DispatchStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/DispatchStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/ScheduleStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/ScheduleStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerIssueStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerIssueStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterReadStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterReadStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerExecutionStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerExecutionStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterWriteStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterWriteStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerIssueStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerIssueStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterReadStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterReadStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerExecutionStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerExecutionStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterWriteStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryIssueStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryIssueStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterReadStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterReadStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryExecutionStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryExecutionStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryAccessStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryAccessStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryTagAccessStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryTagAccessStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterWriteStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterWriteStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/CommitStageIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Pipeline/CommitStage.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RegisterFile/RegisterFile.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RegisterFile/RegisterFileIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RegisterFile/BypassController.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RegisterFile/BypassNetwork.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RegisterFile/BypassNetworkIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RegisterFile/VectorBypassNetwork.sv"] \
 [file normalize "${origin_dir}/../../../../Src/ExecUnit/BitCounter.sv"] \
 [file normalize "${origin_dir}/../../../../Src/ExecUnit/IntALU.sv"] \
 [file normalize "${origin_dir}/../../../../Src/ExecUnit/Shifter.sv"] \
 [file normalize "${origin_dir}/../../../../Src/ExecUnit/MultiplierUnit.sv"] \
 [file normalize "${origin_dir}/../../../../Src/ExecUnit/VectorUnit.sv"] \
 [file normalize "${origin_dir}/../../../../Src/ExecUnit/PipelinedRefDivider.sv"] \
 [file normalize "${origin_dir}/../../../../Src/ExecUnit/DividerUnit.sv"] \
 [file normalize "${origin_dir}/../../../../Src/MulDivUnit/MulDivUnitIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/MulDivUnit/MulDivUnit.sv"] \
 [file normalize "${origin_dir}/../../../../Src/LoadStoreUnit/LoadStoreUnit.sv"] \
 [file normalize "${origin_dir}/../../../../Src/LoadStoreUnit/LoadStoreUnitIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/LoadStoreUnit/LoadQueue.sv"] \
 [file normalize "${origin_dir}/../../../../Src/LoadStoreUnit/StoreQueue.sv"] \
 [file normalize "${origin_dir}/../../../../Src/LoadStoreUnit/StoreCommitter.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RenameLogic/RenameLogic.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RenameLogic/RenameLogicIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RenameLogic/ActiveListIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RenameLogic/ActiveList.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RenameLogic/RMT.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RenameLogic/RetirementRMT.sv"] \
 [file normalize "${origin_dir}/../../../../Src/RenameLogic/RenameLogicCommitter.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Decoder/Decoder.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Decoder/DecodedBranchResolver.sv"] \
 [file normalize "${origin_dir}/../../../../Src/FetchUnit/BTB.sv"] \
 [file normalize "${origin_dir}/../../../../Src/FetchUnit/BranchPredictor.sv"] \
 [file normalize "${origin_dir}/../../../../Src/FetchUnit/Gshare.sv"] \
 [file normalize "${origin_dir}/../../../../Src/FetchUnit/Bimodal.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/SchedulerIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/IssueQueue.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/ReplayQueue.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/WakeupSelectIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/DestinationRAM.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/ReadyBitTable.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/Scheduler.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/SelectLogic.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/SourceCAM.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/WakeupLogic.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/WakeupPipelineRegister.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/ProducerMatrix.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Scheduler/MemoryDependencyPredictor.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Cache/CacheSystemIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Cache/DCache.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Cache/DCacheIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Cache/ICache.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Cache/CachePrimitives.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Cache/MemoryAccessController.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Memory/Memory.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Recovery/RecoveryManager.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Recovery/RecoveryManagerIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/ControllerIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Controller.sv"] \
 [file normalize "${origin_dir}/../../../../Src/ResetController.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Privileged/InterruptController.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Privileged/CSR_Unit.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Privileged/CSR_UnitIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/IO/IO_Unit.sv"] \
 [file normalize "${origin_dir}/../../../../Src/IO/IO_UnitIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Primitives/FlipFlop.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Primitives/FreeList.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Primitives/Queue.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Primitives/RAM.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Primitives/LRU_Counter.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Primitives/Picker.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Primitives/Multiplier.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Primitives/Divider.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Debug/Debug.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Debug/DebugIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Debug/HardwareCounter.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Debug/HardwareCounterIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Memory/Axi4LiteControlRegisterIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Memory/Axi4LiteControlRegister.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Memory/ControlQueue.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Memory/Axi4Memory.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Memory/Axi4MemoryIF.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Memory/MemoryReadReqQueue.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Memory/MemoryWriteDataQueue.sv"] \
 [file normalize "${origin_dir}/../../../../Src/Memory/MemoryRequestQueue.sv"] \
 [file normalize "${origin_dir}/../../../../Src/BasicMacros.sv"] \
 [file normalize "${origin_dir}/../../../../Src/SysDeps/SynthesisMacros.svh"] \
 [file normalize "${origin_dir}/../../../../Src/SysDeps/XilinxMacros.vh"] \
 [file normalize "${origin_dir}/code.hex"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../../../../Src/BasicTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Memory/MemoryMapTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Cache/CacheSystemTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Memory/MemoryTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Decoder/OpFormat.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Decoder/MicroOp.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RegisterFile/BypassTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/FetchUnit/FetchUnitTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/LoadStoreUnit/LoadStoreUnitTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RenameLogic/RenameLogicTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/SchedulerTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/PipelineTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/IO/IO_UnitTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Privileged/CSR_UnitTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Debug/DebugTypes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Verification/TestBenchClockGenerator.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Verification/Dumper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Verification/TestMain.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Main_Zynq_Wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Main_Zynq.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Core.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/FetchStage/NextPCStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/FetchStage/NextPCStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/FetchStage/FetchStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/FetchStage/FetchStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/FetchStage/PC.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/PreDecodeStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/PreDecodeStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/DecodeStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/DecodeStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/RenameStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/RenameStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/DispatchStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/DispatchStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/ScheduleStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/ScheduleStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerIssueStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerIssueStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterReadStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterReadStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerExecutionStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerExecutionStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterWriteStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterWriteStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerIssueStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerIssueStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterReadStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterReadStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerExecutionStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerExecutionStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterWriteStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryIssueStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryIssueStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterReadStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterReadStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryExecutionStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryExecutionStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryAccessStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryAccessStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryTagAccessStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryTagAccessStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterWriteStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterWriteStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/CommitStageIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Pipeline/CommitStage.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RegisterFile/RegisterFile.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RegisterFile/RegisterFileIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RegisterFile/BypassController.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RegisterFile/BypassNetwork.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RegisterFile/BypassNetworkIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RegisterFile/VectorBypassNetwork.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/ExecUnit/BitCounter.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/ExecUnit/IntALU.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/ExecUnit/Shifter.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/ExecUnit/MultiplierUnit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/ExecUnit/VectorUnit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/ExecUnit/PipelinedRefDivider.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/ExecUnit/DividerUnit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/MulDivUnit/MulDivUnitIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/MulDivUnit/MulDivUnit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/LoadStoreUnit/LoadStoreUnit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/LoadStoreUnit/LoadStoreUnitIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/LoadStoreUnit/LoadQueue.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/LoadStoreUnit/StoreQueue.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/LoadStoreUnit/StoreCommitter.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RenameLogic/RenameLogic.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RenameLogic/RenameLogicIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RenameLogic/ActiveListIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RenameLogic/ActiveList.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RenameLogic/RMT.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RenameLogic/RetirementRMT.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/RenameLogic/RenameLogicCommitter.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Decoder/Decoder.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Decoder/DecodedBranchResolver.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/FetchUnit/BTB.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/FetchUnit/BranchPredictor.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/FetchUnit/Gshare.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/FetchUnit/Bimodal.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/SchedulerIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/IssueQueue.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/ReplayQueue.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/WakeupSelectIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/DestinationRAM.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/ReadyBitTable.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/Scheduler.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/SelectLogic.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/SourceCAM.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/WakeupLogic.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/WakeupPipelineRegister.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/ProducerMatrix.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Scheduler/MemoryDependencyPredictor.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Cache/CacheSystemIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Cache/DCache.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Cache/DCacheIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Cache/ICache.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Cache/CachePrimitives.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Cache/MemoryAccessController.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Memory/Memory.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Recovery/RecoveryManager.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Recovery/RecoveryManagerIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/ControllerIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Controller.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/ResetController.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Privileged/InterruptController.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Privileged/CSR_Unit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Privileged/CSR_UnitIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/IO/IO_Unit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/IO/IO_UnitIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Primitives/FlipFlop.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Primitives/FreeList.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Primitives/Queue.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Primitives/RAM.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Primitives/LRU_Counter.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Primitives/Picker.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Primitives/Multiplier.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Primitives/Divider.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Debug/Debug.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Debug/DebugIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Debug/HardwareCounter.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Debug/HardwareCounterIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Memory/Axi4LiteControlRegisterIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Memory/Axi4LiteControlRegister.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Memory/ControlQueue.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Memory/Axi4Memory.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Memory/Axi4MemoryIF.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Memory/MemoryReadReqQueue.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Memory/MemoryWriteDataQueue.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/Memory/MemoryRequestQueue.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "SystemVerilog"

set file "$origin_dir/../../../../Src/BasicMacros.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "Verilog Header"

set file "$origin_dir/../../../../Src/SysDeps/SynthesisMacros.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "Verilog Header"

set file "$origin_dir/../../../../Src/SysDeps/XilinxMacros.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -objects $file_obj -value "Verilog Header"

set file "$origin_dir/code.hex"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "Main_Zynq_Wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "verilog_define" -value "RSD_SYNTHESIS RSD_POST_SYNTHESIS RSD_SYNTHESIS_VIVADO" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Empty (no sources present)

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/../../../../Src/Verification/TestMain.sv"] \
 [file normalize "${origin_dir}/../../../../Src/BasicMacros.sv"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
set file "$origin_dir/../../../../Src/Verification/TestMain.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../../../Src/BasicMacros.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj


# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "nl.mode" -value "funcsim" -objects $obj
set_property -name "sim_mode" -value "post-synthesis" -objects $obj
set_property -name "top" -value "TestMain" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "verilog_define" -value "RSD_VIVADO_SIMULATION RSD_POST_SYNTHESIS_SIMULATION" -objects $obj
set_property -name "xsim.simulate.xsim.more_options" -value "-testplusarg MAX_TEST_CYCLES=1000000 -testplusarg TEST_CODE=./ -testplusarg ENABLE_PC_GOAL=1 -testplusarg SHOW_SERIAL_OUT=0 -testplusarg RSD_LOG_FILE=RSD-post-synthesis.log" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z020clg484-1 -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z020clg484-1 -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
