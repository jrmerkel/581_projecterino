#-----------------------------------------------------------
# Vivado v2020.1 (64-bit)
# SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
# IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
# Start of session at: Mon Dec  6 22:01:26 2021
# Process ID: 438301
# Current directory: /home/jrmerkel/Documents/School/581/proj/rsd/Processor/Project/Vivado/TargetBoards/Zedboard
# Command line: vivado -mode batch -source scripts/post_synthesis/create_project_for_vivadosim.tcl
# Log file: /home/jrmerkel/Documents/School/581/proj/rsd/Processor/Project/Vivado/TargetBoards/Zedboard/vivado.log
# Journal file: /home/jrmerkel/Documents/School/581/proj/rsd/Processor/Project/Vivado/TargetBoards/Zedboard/vivado.jou
#-----------------------------------------------------------
source scripts/post_synthesis/create_project_for_vivadosim.tcl
# set origin_dir "$env(RSD_ROOT)/Processor/Project/Vivado/TargetBoards/Zedboard"
# if { [info exists ::origin_dir_loc] } {
#   set origin_dir $::origin_dir_loc
# }
# set _xil_proj_name_ "rsd_post_synthesis"
# if { [info exists ::user_project_name] } {
#   set _xil_proj_name_ $::user_project_name
# }
# variable script_file
# set script_file "create_post_synthesis_project.tcl"
# proc print_help {} {
#   variable script_file
#   puts "\nDescription:"
#   puts "Recreate a Vivado project from this script. The created project will be"
#   puts "functionally equivalent to the original project for which this script was"
#   puts "generated. The script contains commands for creating a project, filesets,"
#   puts "runs, adding/importing sources and setting properties on various objects.\n"
#   puts "Syntax:"
#   puts "$script_file"
#   puts "$script_file -tclargs \[--origin_dir <path>\]"
#   puts "$script_file -tclargs \[--project_name <name>\]"
#   puts "$script_file -tclargs \[--help\]\n"
#   puts "Usage:"
#   puts "Name                   Description"
#   puts "-------------------------------------------------------------------------"
#   puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
#   puts "                       origin_dir path value is \".\", otherwise, the value"
#   puts "                       that was set with the \"-paths_relative_to\" switch"
#   puts "                       when this script was generated.\n"
#   puts "\[--project_name <name>\] Create project with the specified name. Default"
#   puts "                       name is the name of the project from where this"
#   puts "                       script was generated.\n"
#   puts "\[--help\]               Print help information for this script"
#   puts "-------------------------------------------------------------------------\n"
#   exit 0
# }
# if { $::argc > 0 } {
#   for {set i 0} {$i < $::argc} {incr i} {
#     set option [string trim [lindex $::argv $i]]
#     switch -regexp -- $option {
#       "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
#       "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
#       "--help"         { print_help }
#       default {
#         if { [regexp {^-} $option] } {
#           puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
#           return 1
#         }
#       }
#     }
#   }
# }
# set orig_proj_dir "[file normalize "$origin_dir/rsd_post_synthesis"]"
# create_project ${_xil_proj_name_} $origin_dir/${_xil_proj_name_} -part xc7z020clg484-1
# set proj_dir [get_property directory [current_project]]
# set obj [current_project]
# set_property -name "board_part" -value "em.avnet.com:zed:part0:1.4" -objects $obj
# set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
# set_property -name "enable_vhdl_2008" -value "1" -objects $obj
# set_property -name "ip_cache_permissions" -value "read write" -objects $obj
# set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
# set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
# set_property -name "platform.board_id" -value "zed" -objects $obj
# set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
# set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
# set_property -name "simulator_language" -value "Mixed" -objects $obj
# set_property -name "webtalk.xsim_launch_sim" -value "28" -objects $obj
# if {[string equal [get_filesets -quiet sources_1] ""]} {
#   create_fileset -srcset sources_1
# }
# set obj [get_filesets sources_1]
# set files [list \
#  [file normalize "${origin_dir}/../../../../Src/MicroArchConf.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/BasicTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Memory/MemoryMapTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Cache/CacheSystemTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Memory/MemoryTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Decoder/OpFormat.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Decoder/MicroOp.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RegisterFile/BypassTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/FetchUnit/FetchUnitTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/LoadStoreUnit/LoadStoreUnitTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RenameLogic/RenameLogicTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/SchedulerTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/PipelineTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/IO/IO_UnitTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Privileged/CSR_UnitTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Debug/DebugTypes.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Verification/TestBenchClockGenerator.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Verification/Dumper.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Verification/TestMain.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Main_Zynq_Wrapper.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Main_Zynq.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Core.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/FetchStage/NextPCStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/FetchStage/NextPCStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/FetchStage/FetchStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/FetchStage/FetchStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/FetchStage/PC.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/PreDecodeStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/PreDecodeStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/DecodeStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/DecodeStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/RenameStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/RenameStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/DispatchStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/DispatchStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/ScheduleStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/ScheduleStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerIssueStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerIssueStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterReadStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterReadStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerExecutionStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerExecutionStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterWriteStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterWriteStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerIssueStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerIssueStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterReadStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterReadStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerExecutionStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerExecutionStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterWriteStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryIssueStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryIssueStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterReadStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterReadStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryExecutionStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryExecutionStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryAccessStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryAccessStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryTagAccessStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryTagAccessStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterWriteStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterWriteStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/CommitStageIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Pipeline/CommitStage.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RegisterFile/RegisterFile.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RegisterFile/RegisterFileIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RegisterFile/BypassController.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RegisterFile/BypassNetwork.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RegisterFile/BypassNetworkIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RegisterFile/VectorBypassNetwork.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/ExecUnit/BitCounter.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/ExecUnit/IntALU.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/ExecUnit/Shifter.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/ExecUnit/MultiplierUnit.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/ExecUnit/VectorUnit.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/ExecUnit/PipelinedRefDivider.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/ExecUnit/DividerUnit.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/MulDivUnit/MulDivUnitIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/MulDivUnit/MulDivUnit.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/LoadStoreUnit/LoadStoreUnit.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/LoadStoreUnit/LoadStoreUnitIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/LoadStoreUnit/LoadQueue.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/LoadStoreUnit/StoreQueue.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/LoadStoreUnit/StoreCommitter.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RenameLogic/RenameLogic.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RenameLogic/RenameLogicIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RenameLogic/ActiveListIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RenameLogic/ActiveList.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RenameLogic/RMT.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RenameLogic/RetirementRMT.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/RenameLogic/RenameLogicCommitter.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Decoder/Decoder.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Decoder/DecodedBranchResolver.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/FetchUnit/BTB.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/FetchUnit/BranchPredictor.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/FetchUnit/Gshare.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/FetchUnit/Bimodal.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/FetchUnit/GAg.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/SchedulerIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/IssueQueue.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/ReplayQueue.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/WakeupSelectIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/DestinationRAM.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/ReadyBitTable.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/Scheduler.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/SelectLogic.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/SourceCAM.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/WakeupLogic.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/WakeupPipelineRegister.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/ProducerMatrix.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Scheduler/MemoryDependencyPredictor.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Cache/CacheSystemIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Cache/DCache.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Cache/DCacheIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Cache/ICache.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Cache/MemoryAccessController.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Cache/CacheFlushManager.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Cache/CacheFlushManagerIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Memory/Memory.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Recovery/RecoveryManager.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Recovery/RecoveryManagerIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/ControllerIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Controller.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/ResetController.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Privileged/InterruptController.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Privileged/CSR_Unit.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Privileged/CSR_UnitIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/IO/IO_Unit.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/IO/IO_UnitIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Primitives/FlipFlop.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Primitives/FreeList.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Primitives/Queue.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Primitives/RAM.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Primitives/LRU_Counter.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Primitives/Picker.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Primitives/Multiplier.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Primitives/Divider.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Debug/Debug.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Debug/DebugIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Debug/PerformanceCounter.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Debug/PerformanceCounterIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Memory/Axi4LiteControlRegisterIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Memory/Axi4LiteControlRegister.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Memory/ControlQueue.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Memory/Axi4Memory.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Memory/Axi4MemoryIF.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Memory/MemoryReadReqQueue.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Memory/MemoryWriteDataQueue.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/Memory/MemoryLatencySimulator.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/BasicMacros.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/SysDeps/SynthesisMacros.svh"] \
#  [file normalize "${origin_dir}/../../../../Src/SysDeps/XilinxMacros.vh"] \
#  [file normalize "${origin_dir}/code.hex"] \
# ]
# add_files -norecurse -fileset $obj $files
# set file "$origin_dir/../../../../Src/MicroArchConf.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/BasicTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Memory/MemoryMapTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Cache/CacheSystemTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Memory/MemoryTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Decoder/OpFormat.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Decoder/MicroOp.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RegisterFile/BypassTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/FetchUnit/FetchUnitTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/LoadStoreUnit/LoadStoreUnitTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RenameLogic/RenameLogicTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/SchedulerTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/PipelineTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/IO/IO_UnitTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Privileged/CSR_UnitTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Debug/DebugTypes.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Verification/TestBenchClockGenerator.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Verification/Dumper.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Verification/TestMain.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Main_Zynq_Wrapper.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Main_Zynq.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Core.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/FetchStage/NextPCStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/FetchStage/NextPCStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/FetchStage/FetchStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/FetchStage/FetchStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/FetchStage/PC.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/PreDecodeStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/PreDecodeStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/DecodeStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/DecodeStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/RenameStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/RenameStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/DispatchStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/DispatchStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/ScheduleStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/ScheduleStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerIssueStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerIssueStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterReadStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterReadStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerExecutionStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerExecutionStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterWriteStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/IntegerBackEnd/IntegerRegisterWriteStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerIssueStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerIssueStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterReadStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterReadStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerExecutionStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerExecutionStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/ComplexIntegerBackEnd/ComplexIntegerRegisterWriteStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryIssueStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryIssueStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterReadStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterReadStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryExecutionStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryExecutionStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryAccessStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryAccessStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryTagAccessStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryTagAccessStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterWriteStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/MemoryBackEnd/MemoryRegisterWriteStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/CommitStageIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Pipeline/CommitStage.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RegisterFile/RegisterFile.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RegisterFile/RegisterFileIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RegisterFile/BypassController.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RegisterFile/BypassNetwork.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RegisterFile/BypassNetworkIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RegisterFile/VectorBypassNetwork.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/ExecUnit/BitCounter.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/ExecUnit/IntALU.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/ExecUnit/Shifter.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/ExecUnit/MultiplierUnit.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/ExecUnit/VectorUnit.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/ExecUnit/PipelinedRefDivider.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/ExecUnit/DividerUnit.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/MulDivUnit/MulDivUnitIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/MulDivUnit/MulDivUnit.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/LoadStoreUnit/LoadStoreUnit.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/LoadStoreUnit/LoadStoreUnitIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/LoadStoreUnit/LoadQueue.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/LoadStoreUnit/StoreQueue.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/LoadStoreUnit/StoreCommitter.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RenameLogic/RenameLogic.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RenameLogic/RenameLogicIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RenameLogic/ActiveListIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RenameLogic/ActiveList.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RenameLogic/RMT.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RenameLogic/RetirementRMT.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/RenameLogic/RenameLogicCommitter.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Decoder/Decoder.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Decoder/DecodedBranchResolver.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/FetchUnit/BTB.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/FetchUnit/BranchPredictor.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/FetchUnit/Gshare.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/FetchUnit/Bimodal.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/FetchUnit/GAg.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/SchedulerIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/IssueQueue.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/ReplayQueue.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/WakeupSelectIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/DestinationRAM.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/ReadyBitTable.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/Scheduler.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/SelectLogic.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/SourceCAM.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/WakeupLogic.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/WakeupPipelineRegister.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/ProducerMatrix.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Scheduler/MemoryDependencyPredictor.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Cache/CacheSystemIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Cache/DCache.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Cache/DCacheIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Cache/ICache.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Cache/MemoryAccessController.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Cache/CacheFlushManager.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Cache/CacheFlushManagerIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Memory/Memory.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Recovery/RecoveryManager.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Recovery/RecoveryManagerIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/ControllerIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Controller.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/ResetController.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Privileged/InterruptController.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Privileged/CSR_Unit.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Privileged/CSR_UnitIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/IO/IO_Unit.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/IO/IO_UnitIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Primitives/FlipFlop.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Primitives/FreeList.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Primitives/Queue.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Primitives/RAM.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Primitives/LRU_Counter.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Primitives/Picker.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Primitives/Multiplier.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Primitives/Divider.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Debug/Debug.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Debug/DebugIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Debug/PerformanceCounter.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Debug/PerformanceCounterIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Memory/Axi4LiteControlRegisterIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Memory/Axi4LiteControlRegister.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Memory/ControlQueue.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Memory/Axi4Memory.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Memory/Axi4MemoryIF.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Memory/MemoryReadReqQueue.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Memory/MemoryWriteDataQueue.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/Memory/MemoryLatencySimulator.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "SystemVerilog"
# set file "$origin_dir/../../../../Src/BasicMacros.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "Verilog Header"
# set file "$origin_dir/../../../../Src/SysDeps/SynthesisMacros.svh"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "Verilog Header"
# set file "$origin_dir/../../../../Src/SysDeps/XilinxMacros.vh"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -objects $file_obj -value "Verilog Header"
# set file "$origin_dir/code.hex"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -value "Memory File" -objects $file_obj
# set obj [get_filesets sources_1]
# set_property -name "top" -value "Main_Zynq_Wrapper" -objects $obj
# set_property -name "top_auto_set" -value "0" -objects $obj
# set_property -name "verilog_define" -value "RSD_SYNTHESIS RSD_POST_SYNTHESIS RSD_SYNTHESIS_VIVADO" -objects $obj
# if {[string equal [get_filesets -quiet constrs_1] ""]} {
#   create_fileset -constrset constrs_1
# }
# set obj [get_filesets constrs_1]
# set obj [get_filesets constrs_1]
# if {[string equal [get_filesets -quiet sim_1] ""]} {
#   create_fileset -simset sim_1
# }
# set obj [get_filesets sim_1]
# set files [list \
#  [file normalize "${origin_dir}/../../../../Src/Verification/TestMain.sv"] \
#  [file normalize "${origin_dir}/../../../../Src/BasicMacros.sv"] \
# ]
# add_files -norecurse -fileset $obj $files
# set file "$origin_dir/../../../../Src/Verification/TestMain.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
# set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
# set file "$origin_dir/../../../../Src/BasicMacros.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
# set_property -name "file_type" -value "Verilog Header" -objects $file_obj
# set obj [get_filesets sim_1]
# set_property -name "nl.mode" -value "funcsim" -objects $obj
# set_property -name "sim_mode" -value "post-synthesis" -objects $obj
# set_property -name "top" -value "TestMain" -objects $obj
# set_property -name "top_auto_set" -value "0" -objects $obj
# set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
# set_property -name "verilog_define" -value "RSD_VIVADO_SIMULATION RSD_POST_SYNTHESIS_SIMULATION" -objects $obj
# set_property -name "xsim.simulate.xsim.more_options" -value "-testplusarg MAX_TEST_CYCLES=1000000 -testplusarg TEST_CODE=./ -testplusarg ENABLE_PC_GOAL=1 -testplusarg SHOW_SERIAL_OUT=0 -testplusarg RSD_LOG_FILE=RSD-post-synthesis.log" -objects $obj
# set obj [get_filesets utils_1]
# set obj [get_filesets utils_1]
# if {[string equal [get_runs -quiet synth_1] ""]} {
#     create_run -name synth_1 -part xc7z020clg484-1 -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
# } else {
#   set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
#   set_property flow "Vivado Synthesis 2019" [get_runs synth_1]
# }
# set obj [get_runs synth_1]
# set_property set_report_strategy_name 1 $obj
# set_property report_strategy {Vivado Synthesis Default Reports} $obj
# set_property set_report_strategy_name 0 $obj
# if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
#   create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
# }
# set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
# if { $obj != "" } {
# 
# }
# set obj [get_runs synth_1]
# set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj
# current_run -synthesis [get_runs synth_1]
# if {[string equal [get_runs -quiet impl_1] ""]} {
#     create_run -name impl_1 -part xc7z020clg484-1 -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
# } else {
#   set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
#   set_property flow "Vivado Implementation 2019" [get_runs impl_1]
# }
# set obj [get_runs impl_1]
# set_property set_report_strategy_name 1 $obj
# set_property report_strategy {Vivado Implementation Default Reports} $obj
# set_property set_report_strategy_name 0 $obj
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "options.max_paths" -value "10" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
#   create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "options.max_paths" -value "10" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "options.max_paths" -value "10" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
# if { $obj != "" } {
# set_property -name "options.verbose" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
#   create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "options.max_paths" -value "10" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "options.max_paths" -value "10" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "options.max_paths" -value "10" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "options.max_paths" -value "10" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
# if { $obj != "" } {
# set_property -name "options.warn_on_violation" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "options.max_paths" -value "10" -objects $obj
# set_property -name "options.warn_on_violation" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
#   create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
# if { $obj != "" } {
# set_property -name "options.warn_on_violation" -value "1" -objects $obj
# 
# }
# set obj [get_runs impl_1]
# set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
# set_property -name "steps.phys_opt_design.is_enabled" -value "1" -objects $obj
# set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
# set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj
# current_run -implementation [get_runs impl_1]
# puts "INFO: Project created:${_xil_proj_name_}"
INFO: Project created:rsd_post_synthesis
# if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
# create_dashboard_gadget -name {drc_1} -type drc
# }
# set obj [get_dashboard_gadgets [ list "drc_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj
# if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
# create_dashboard_gadget -name {methodology_1} -type methodology
# }
# set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj
# if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
# create_dashboard_gadget -name {power_1} -type power
# }
# set obj [get_dashboard_gadgets [ list "power_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj
# if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
# create_dashboard_gadget -name {timing_1} -type timing
# }
# set obj [get_dashboard_gadgets [ list "timing_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj
# if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
# create_dashboard_gadget -name {utilization_1} -type utilization
# }
# set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
# set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
# set_property -name "run.step" -value "synth_design" -objects $obj
# set_property -name "run.type" -value "synthesis" -objects $obj
# if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
# create_dashboard_gadget -name {utilization_2} -type utilization
# }
# set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
# set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj
# move_dashboard_gadget -name {utilization_1} -row 0 -col 0
# move_dashboard_gadget -name {power_1} -row 1 -col 0
# move_dashboard_gadget -name {drc_1} -row 2 -col 0
# move_dashboard_gadget -name {timing_1} -row 0 -col 1
# move_dashboard_gadget -name {utilization_2} -row 1 -col 1
# move_dashboard_gadget -name {methodology_1} -row 2 -col 1
INFO: [Common 17-206] Exiting Vivado at Mon Dec  6 22:01:33 2021...
